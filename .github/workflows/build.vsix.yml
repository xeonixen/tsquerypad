name: Build and Tag VSIX

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0           # Fetch full history for tags, required for pushing tags
          persist-credentials: false  # Disable default token, so PAT works

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git user
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      - name: Bump patch version, commit and push tag manually
        id: bump_version
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${PAT_TOKEN}@github.com/${{ github.repository }}.git

          # Bump version in package.json and package-lock.json without tagging
          NEW_VERSION=$(npm version patch --no-git-tag-version -m "ci: bump version to %s [skip ci]")

          # Stage and commit the changes
          git add package.json package-lock.json
          git commit -m "ci: bump version to $NEW_VERSION [skip ci]"

          # Create and push the tag
          git tag "$NEW_VERSION"
          git push origin HEAD
          git push origin "$NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Build VSIX package
        run: npx vsce package

      - name: Rename VSIX file to include version
        id: rename_vsix
        run: |
          VERSION=${{ steps.bump_version.outputs.version }}
          VERSION_NUMBER=${VERSION#v}
          NEW_NAME="tsquerypad-v${VERSION_NUMBER}.vsix"
          mv *.vsix $NEW_NAME
          echo "vsix_name=$NEW_NAME" >> $GITHUB_OUTPUT

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: tsquerypad-${{ steps.bump_version.outputs.version }}
          path: ${{ steps.rename_vsix.outputs.vsix_name }}

      - name: Create GitHub Release with VSIX
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump_version.outputs.version }}
          name: Release ${{ steps.bump_version.outputs.version }}
          files: ${{ steps.rename_vsix.outputs.vsix_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
